---
import {Image} from "astro:assets";
import "modern-normalize/modern-normalize.css";
import logo from "@assets/icons/logo.svg";
import LayoutHead from "./LayoutHead.astro";
import Header from "@components/astro/Header.astro";
import Footer from "@components/astro/Footer.astro";
import Notifications from "@ui/react/notifications/Notifications";
import CookieConsent from "@components/cookieConsent/CookieConsent.astro";
import {ROUTES_TO_SHOW_DYNAMIC_HEADER_TEXT} from "@utils/url";

type Props = {
	title?: string;
	description?: string;
	headerText?: string;
};

const {title, description, headerText} = Astro.props;
const isDynamicText = ROUTES_TO_SHOW_DYNAMIC_HEADER_TEXT.includes(
	Astro.url.pathname,
);
---

<!doctype html>
<html lang="en">
	<LayoutHead title={title} description={description} />
	<body>
		<div id="globalLoading">
			<Image
				src={logo}
				width="200"
				height="200"
				alt="Logo"
				loading="eager"
				decoding="sync"
			/>
		</div>
		<Header isDynamicText={isDynamicText} text={headerText} />
		<slot />
		<Notifications client:load />
		<Footer />
		<div transition:persist="cookie-consent" id="cc-container">
			<CookieConsent />
		</div>
		<script is:inline>
			// Restore the `show--consent` class if it was present before the page swap
			document.addEventListener("astro:before-preparation", () => {
				const htmlClassName = window.document.documentElement.className;
				const consentClassPresent = htmlClassName.includes(
					"show--consent",
				)
					? true
					: false;
				window._showConsentClass = consentClassPresent;
			});

			document.addEventListener("astro:before-swap", event => {
				const showConsent = window._showConsentClass
					? ` show--consent`
					: "";
				event.newDocument.documentElement.className += showConsent;
			});
		</script>
	</body>
</html>

<script>
	import {hideGlobalLoader} from "@utils/loader";

	hideGlobalLoader();
	document.addEventListener("astro:after-swap", hideGlobalLoader);
</script>

<style>
	#notificationsContainer {
		position: relative;
		z-index: var(--zIndex_notification);
	}
</style>
