---
import Image from "astro/components/Image.astro";
import "modern-normalize/modern-normalize.css";
import logo from "@assets/icons/logo.svg";
import LayoutHead from "./LayoutHead.astro";
import Header from "@components/Header.astro";
import Footer from "@components/Footer.astro";

type Props = {
	title?: string;
	description?: string;
};

const {title, description} = Astro.props;
---

<!doctype html>
<html lang="en">
	<LayoutHead title={title} description={description} />
	<body>
		<div id="loading">
			<Image
				src={logo}
				width="200"
				height="200"
				alt="Logo"
				loading="eager"
				decoding="sync"
			/>
		</div>
		<Header />
		<slot />
		<Footer />
	</body>
</html>

<script is:inline>
	const hideSpinnerWhenReady = async () => {
		const loader = document.getElementById("loading");
		const results = await Promise.allSettled([
			new Promise(resolve => {
				if (
					document.readyState === "complete" ||
					document.readyState === "interactive"
				) {
					resolve();
				} else {
					document.addEventListener("DOMContentLoaded", resolve);
				}
			}),
			document.fonts.ready,
		]);

		const allSuccessful = results.every(
			result => result.status === "fulfilled",
		);

		if (allSuccessful && loader) {
			loader.classList.add("hidden");
		} else {
			if (loader) loader.classList.add("hidden");
		}
	};

	hideSpinnerWhenReady();
</script>

<style>
	@keyframes animate {
		0% {
			transform: scale(1);
		}
		25% {
			transform: scale(1.05);
		}
		50% {
			transform: scale(1);
		}
		75% {
			transform: scale(1.05);
		}
		100% {
			transform: scale(1);
		}
	}

	@keyframes fade {
		0% {
			opacity: 1;
		}
		70% {
			opacity: 1;
		}
		99% {
			opacity: 0;
		}
		100% {
			opacity: 0;
			display: none;
		}
	}
	#loading {
		position: absolute;
		inset: 0;
		z-index: var(--zIndex_loader);
		display: flex;
		justify-content: center;
		align-items: center;
		background: inherit;
	}
	#loading img {
		position: absolute;
		animation: 2s infinite animate;
	}

	#loading.hidden {
		animation: 0.5s forwards fade;
	}
</style>
